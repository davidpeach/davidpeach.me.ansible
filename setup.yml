---
- hosts: all
  become: true
  user: root
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

    - name: Update apt
      apt: update_cache=yes

    - name: Install required system packages
      apt: name={{ sys_packages }} state=latest

    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: 
          - wheel
          - www-data
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: "create www directory"
      file:
        path: /var/www/{{ http_host }}
        state: directory
        mode: '0775'
        owner: "{{ create_user }}"
        group: "{{ create_user }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

    - name: Sets Nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enables new site
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
      notify: Reload Nginx

    - name: Removes "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx

    - name: create certificate - standalone
      command: "certbot --nginx  -d  {{ http_host }} --agree-tos --noninteractive --email {{ certbot_email }}"
      notify: Reload Nginx

    - name: add hooks for renewal
      lineinfile:
        path: /etc/letsencrypt/renewal/{{ http_host }}.conf
        line: "{{ item }}"
        insertafter: EOF
      with_items:
        - "post_hook = systemctl start apache2"
        - "pre_hook = systemctl stop apache2"
      notify: Reload Nginx

    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Allow HTTP connections
      ufw:
        rule: allow
        port: 80
        proto: tcp

    - name: UFW - Allow HTTP connections
      ufw:
        rule: allow
        port: 443
        proto: tcp

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
